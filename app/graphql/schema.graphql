scalar Observation
scalar RawObservation
scalar Filters

type ObservationsQuery {
  "Observations with their values parsed to native JS types"
  data: [Observation!]!
  "Observations with their original RDF-y type"
  rawData: [RawObservation!]!
  "The generated SPARQL query string of the current query (doesn't fetch any data)"
  sparql: String!
}

type DataCube {
  iri: String!
  title: String!
  contact: String
  source: String
  description: String
  observations(limit: Int, measures: [String!], filters: Filters): ObservationsQuery!
  dimensions: [Dimension!]!
  measures: [Measure!]!
}

type DimensionValue {
  value: String!
  label: String!
}

interface Component {
  iri: String!
  label: String!
}

interface Dimension {
  values: [DimensionValue!]!
}

type NominalDimension implements Component & Dimension {
  iri: String!
  label: String!
  values: [DimensionValue!]!
}

type OrdinalDimension implements Component & Dimension {
  iri: String!
  label: String!
  values: [DimensionValue!]!
}

type TemporalDimension implements Component & Dimension {
  iri: String!
  label: String!
  values: [DimensionValue!]!
}

type Measure implements Component {
  iri: String!
  label: String!
}

type Attribute implements Component {
  iri: String!
  label: String!
}

# The "Query" type is special: it lists all of the available queries that
# clients can execute, along with the return type for each.
type Query {
  dataCubeByIri(locale: String, iri: String!): DataCube
  dataCubes(locale: String): [DataCube!]!
}
