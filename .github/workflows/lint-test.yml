name: Lint & test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v3
        with:
          node-version: 12.x
          cache: yarn
      - uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/app/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - run: yarn install --frozen-lockfile
      - run: yarn lint
      - run: yarn typecheck
      - run: yarn test
      - run: yarn build
      - name: Upload the build folder (necessary for Cypress)
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: app/.next
  cypress-run:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: app/.next
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: "env PORT=3333 npm run start"
          wait-on: "http://localhost:3333"
          record: false
      - name: Upload Cypress screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Cypress videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
      - name: Set argos upload branch on master branch
        run: echo "ARGOS_BRANCH=master" >> $GITHUB_ENV
        if: github.ref == 'refs/heads/main'
      - name: Set argos upload branch on PR branches
        run: echo "ARGOS_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
        if: github.ref != 'refs/heads/main'
      - name: Upload screenshots
        env:
          ARGOS_TOKEN: ${{ secrets.ARGOS_TOKEN }}
        run: yarn run argos upload --commit $GITHUB_SHA --branch $ARGOS_BRANCH  cypress/screenshots
